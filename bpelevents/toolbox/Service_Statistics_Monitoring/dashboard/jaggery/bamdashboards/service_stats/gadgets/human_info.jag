<%

var statButton = request.getParameter('stat');
var instanceValue = request.getParameter('inst');
var taskName = request.getParameter('task');



var log = new Log();

log.info("ssssssssss - ssssssss s ss s s server - "+statButton+" --- instance - "+instanceValue);





var time1 = getTimeDiff("Sat May 31 17:05:36 IST 2014","Sat May 31 19:05:36 IST 2014");


log.info(time1);




var selectHumanTaskQuery = "Select distinct taskName from humanTaskInfo order by taskName";

    log.info(QueryResults(selectHumanTaskQuery));

var packageResults = QueryResults(selectHumanTaskQuery);


function QueryResults(q){
        
        var result;
        try{
            var db = new Database("WSO2BAM_DATASOURCE");
            result = db.query(q);
        }
        catch(e){
            print(e);
        }
        finally{
            db.close();
        }
        return result;
}
   

function getHumanTaskList(results)
{
    
    print("<table class='table table-bordere' style='width:94%; empty-cells:hide; border-collapse: collapse'>");
        
    print("<thead><tr><th>Task Name</th><th class='text-center'>Total Instances</th></tr></thead><tbody>")


    for (var k in results){

        var selectTaskCountQuery = "Select Count(taskId) as count from humanTaskInfo where taskName='"+results[k]["TASKNAME"]+"' and eventType='CREATE'";
        var countResults = QueryResults(selectTaskCountQuery);

        log.info(countResults);

        results[k]["COUNT"] = countResults[0]["COUNT"];
        
    }

    log.info(results);


    if(results.length == 0)
    {
        var dataNotAvailable = "<font color='red'>No data Found!</font>";

         print("<tr>");
         print("<td></td>");
         print("<td>"+dataNotAvailable+"</td>");                                                                    
         print("</tr>");
    }
    else
    {
        for (var k in results){

         print("<tr>");
         print("<td>"+results[k]["TASKNAME"]+"</td>");
         print("<td class='text-center'>"+results[k]["COUNT"]+"</td>");                                                                   
         print("</tr>");

        }
    }
               

    print("</tbody></table>");


}


function getTaskNames(results)
{

    if(taskName=="All")
    {
      log.info("came into all");
      print("<option value='human_info.jag?stat=Taskl&task=All' selected>All</option>");

     for (var k in results){
        print("<option value='human_info.jag?stat=Task&task="+results[k]["TASKNAME"]+"'>"+results[k]["TASKNAME"]+"</option>");
     }

    }
    else
    {
      log.info("ddnt come into all");
       print("<option value='human_info.jag?stat=Task&task=All'>All</option>");

      for (var k in results)
      {
        var tName = results[k]["TASKNAME"];

        if(taskName==tName)
        {
           print("<option value='human_info.jag?stat=Task&task="+tName+"' selected>"+tName+"</option>");
        }
        else
        {
           print("<option value='human_info.jag?stat=Task&task="+tName+"'>"+tName+"</option>");
        }
      }

    }
     

    }

    
function getPackageData(packageN)
{

   var selectInsQuery = "Select processInstanceId,state,time from bpelProcessInfo111 where packageName='"+packageN+"' and state='Ready' order by time";
   var distinctInstances = QueryResults(selectInsQuery);


   var selectStateWiseQuery = "Select processInstanceId,state,time from bpelProcessInfo111 where packageName='"+packageN+"' and (state='Completed' or state='Failed' or state='Suspended' or state='Terminated') order by time";
   var stateWiseInstances = QueryResults(selectStateWiseQuery);
   
   log.info(QueryResults(selectInsQuery));


    for (var k in distinctInstances)
    {
      distinctInstances[k]["MODIFIEDTIME"]=distinctInstances[k]["TIME"];
      distinctInstances[k]["STATE"]="Active";

      for (var k2 in stateWiseInstances){
       
       if(distinctInstances[k]["PROCESSINSTANCEID"]==stateWiseInstances[k2]["PROCESSINSTANCEID"])
       {
          distinctInstances[k]["STATE"]=stateWiseInstances[k2]["STATE"];
          distinctInstances[k]["MODIFIEDTIME"]=stateWiseInstances[k2]["TIME"];
       }

      }

    }

log.info(distinctInstances);

return distinctInstances;

}

function getPieChart(instances)
{

var totalInstances = instances.length;
 
print("<h5>Total Instances : "+totalInstances+"</h5>");
print("<h5>Average Response Time : "+totalInstances+"</h5>");
print("<h5>Average Completion Time : "+totalInstances+"</h5>");

print("<div id='piechart_3d' style='width: 1000px; height: 600px;'></div>");

print("<h3 style='background-color:lightblue;'>Instances Related Information</h3>");

}

function calculateAvgRespondTime(instances,user)
{

  if(user="All")
  {
    for (var k in instances){



    }

  }
  else
  {

  }



}

function getStates(instances)
{

var reserved=0;
var inprogress=0;
var completed=0;
var ready=0;
var suspended=0;
var failed = 0;

for(var k in instances)
{
  if(instances[k]["TASKSTATUS"]=="RESERVED")
  {
    reserved++;
  }
  else if(instances[k]["TASKSTATUS"]=="IN_PROGRESS")
  {
    inprogress++;

  }else if(instances[k]["TASKSTATUS"]=="COMPLETED")
  {
    completed++;

  }else if(instances[k]["TASKSTATUS"]=="READY")
  {
    ready++;

  }else if(instances[k]["TASKSTATUS"]=="SUSPENDED")
  {
    suspended++;
  }
  else if(instances[k]["TASKSTATUS"]=="FAILED")
  {
    failed++;
  }
}


print("['Status', 'Instance Count'],"+'\n');
print("['Reserved - "+reserved+"',     "+reserved+"],"+'\n');
print("['Failed - "+failed+"',     "+failed+"],"+'\n');
print("['Suspended - "+suspended+"',     "+suspended+"],"+'\n');
print("['Completed - "+completed+"',     "+completed+"],"+'\n');
print("['In_Progress - "+inprogress+"',     "+inprogress+"],"+'\n');
print("['Ready - "+ready+"',  "+ready+"]");

}

function getInstances(results)
{

    print("<table class='table table-bordere' style='width:94%; empty-cells:hide; border-collapse: collapse'>");
        
    print("<thead><tr><th>Task Id</th><th>Subject</th><th>Status</th><th>Created Date</th><th>Task Completion Time</th><th>Participants</th></tr></thead><tbody>")


    if(results.length == 0)
    {
        var dataNotAvailable = "<font color='red'>No data Found!</font>";

         print("<tr>");
         print("<td></td>");
         print("<td></td>");
         print("<td>"+dataNotAvailable+"</td>");
         print("<td></td>");
         print("<td></td>");
         print("<td></td>");                                                                     
         print("</tr>");
    }
    else
    {
        for (var k in results){

         var taskStatus = results[k]["TASKSTATUS"];
         var stateData="<font color='"+getFontColour(taskStatus)+"'>"+taskStatus+"</font>";
         var completionTime = "N/A";
         var taskCreatedTime = results[k]["TASKCREATEDTIME"];

         if(taskStatus == "COMPLETED"){
            completionTime = getTimeDiff(taskCreatedTime,results[k]["MODIFIEDDATE"]);
         }
        

         print("<tr>");
         print("<td>"+results[k]["TASKID"]+"</td>");
         print("<td>"+results[k]["TASKSUBJECT"]+"</td>");
         print("<td>"+stateData+"</td>");
         print("<td>"+taskCreatedTime+"</td>");
         print("<td>"+completionTime+"</td>");
         print("<td>"+results[k]["TASKOWNER"]+"</td>");                                                                     
         print("</tr>");

        }
    }
               

    print("</tbody></table>");


}


function getFontColour(state)
{

  var colour="";

  if(state=="RESERVED")
  {
    colour="blue";
  }
  else if(state=="COMPLETED")
  {
    colour="green";
  }
  else if(state=="FAILED")
  {
    colour="red";
  }
  else if(state=="SUSPENDED")
  {
    colour="orange";
  }
  else if(state=="IN_PROGRESS")
  {
    colour="purple";
  }
  else if(state=="READY")
  {
    colour="black";
  }

  return colour;

}

function hideInstances(packageN)
{
  if(packageN=="All")
  {
    print("<div class='hidden'>");
  }
  else
  {
    print("<div class='well topFilteringPanel'>");
  }

}

function getInstanceIds(results,packageN,instValue)
{

    if(instValue=="All")
    {
      log.info("came into all");
      print("<option value='bpel_info.jag?package="+packageN+"&inst=All' selected>All</option>");

     for (var k in results){

        var instId = results[k]["PROCESSINSTANCEID"];

        print("<option value='bpel_info.jag?package="+packageN+"&inst="+instId+"'>"+instId+"</option>");
     }

    }
    else
    {
      log.info("ddnt come into all");

      print("<option value='bpel_info.jag?package="+packageN+"&inst=All'>All</option>");

      for (var k in results){

        var instName = results[k]["PROCESSINSTANCEID"];
        if(instValue==instName)
        {
           print("<option value='bpel_info.jag?package="+packageN+"&inst="+instName+"' selected>"+instName+"</option>");
   
        }
        else
        {
           print("<option value='bpel_info.jag?package="+packageN+"&inst="+instName+"'>"+instName+"</option>");
   
        }

         }

    }
}

function getInstData(instVal)
{

    var selectInstDataQuery = "Select activityId,activityName,activityType,scopeId,scopeName,type,eventName,time,lineNo from bpelProcessInstanceInfo where processInstanceId='"+instVal+"' order by CAST(activityId AS INT)";
    var instanceData = QueryResults(selectInstDataQuery);

    log.info(instanceData);


    print("<table class='table table-bordere' style='width:94%; empty-cells:hide; border-collapse: collapse'>");
        
    print("<thead><tr><th>Activity Id</th><th>Activity Name</th><th>Activity Type</th><th>Scope Id</th><th>Scope Name</th><th>Event Type</th><th>Time</th><th>Line No</th><th>Event Name</th></tr></thead><tbody>")


    if(instanceData.length == 0)
    {
        var dataNotAvailable = "<font color='red'>No data Found!</font>";

         print("<tr>");
         print("<td></td>");
         print("<td></td>");
         print("<td></td>");
         print("<td></td>");
         print("<td>"+dataNotAvailable+"</td>");
         print("<td></td>");
         print("<td></td>");
         print("<td></td>");
         print("<td></td>");                                                                     
         print("</tr>");
    }
    else
    {
        for (var k in instanceData){

         print("<tr>");
         print("<td>"+instanceData[k]["ACTIVITYID"]+"</td>");
         print("<td>"+instanceData[k]["ACTIVITYNAME"]+"</td>");
         print("<td>"+instanceData[k]["ACTIVITYTYPE"]+"</td>");  
         print("<td>"+instanceData[k]["SCOPEID"]+"</td>");
         print("<td>"+instanceData[k]["SCOPENAME"]+"</td>");
         print("<td>"+instanceData[k]["TYPE"]+"</td>");
         print("<td>"+instanceData[k]["TIME"]+"</td>");                                                                   
         print("<td>"+instanceData[k]["LINENO"]+"</td>");
         print("<td>"+instanceData[k]["EVENTNAME"]+"</td>");
         print("</tr>");

        }
    }
               

    print("</tbody></table>");


}


function getClearButton(packageN)
{

  print("<button onClick=\"window.location.href='human_info.jag?stat=Task&task=All'\" id='clearSelectionBtn1' class='btn btn-primary btn-small pull-right filter-btn'>Clear</button>");

}

function getStatButton(stat)
{

  if(stat == "Task")
  {
      print("<button onClick=\"window.location.href='human_info.jag?stat=Task&task=All'\"  class='btn btn-primary'>Task Related Stats</button><button onClick=\"window.location.href='human_info.jag?stat=User'\" class='btn'>Per User Stats</button>");
  }
  else
  {
       print("<button onClick=\"window.location.href='human_info.jag?stat=Task&task=All'\"  class='btn'>Task Related Stats</button><button onClick=\"window.location.href='human_info.jag?stat=User'\" class='btn btn-primary'>Per User Stats</button>");
  }

}

function getHumanTaskData(taskN)
{

   var selectDistinctTasksQuery = "Select * from humanTaskInfo where taskName='"+taskN+"' and taskStatus='RESERVED' order by taskCreatedTime";
   var distinctTasks = QueryResults(selectDistinctTasksQuery);

   var selectNonReservedTasksQuery = "Select taskId,taskStatus,modifiedDate from humanTaskInfo where taskName='"+taskN+"' and taskStatus!='RESERVED' order by modifiedDate";
   var nonReservedTasks = QueryResults(selectNonReservedTasksQuery);


   log.info(distinctTasks);

   log.info("^^^^^^^^^^^^^^^^^^^666^^^^^^^^^^^^^^^^^6666^^^^^^^^^^^^");

   log.info(nonReservedTasks);

   for (var k in distinctTasks)
    {
     
      for (var k2 in nonReservedTasks){
       
       if(distinctTasks[k]["TASKID"]==nonReservedTasks[k2]["TASKID"])
       {
          distinctTasks[k]["TASKSTATUS"]=nonReservedTasks[k2]["TASKSTATUS"];
          distinctTasks[k]["MODIFIEDDATE"]=nonReservedTasks[k2]["MODIFIEDDATE"];
       }

      }

    }


    log.info(distinctTasks);

    return distinctTasks;


}

function getTimeDiff(startT,endT)
{
    
    var timeDiff = getDateTime(convertToUTC(endT)-convertToUTC(startT));

    return timeDiff;

}

function convertToUTC(time)
{  
    var timeValues = time.split(" ");
    var month = getMonthValue(timeValues[1])-1;
    var year = timeValues[5];
    var date = timeValues[2];

    var hourValues = timeValues[3].split(":");

    var setTime = new Date(year,month,date,hourValues[0],hourValues[1],hourValues[2]);
    var utcTime = setTime.getTime()/1000;

    return utcTime;
}

// convert UTC time to Days, Hours, Minutes and Seconds
function getDateTime(t){
  return parseInt(t/86400)+'d '+(new Date(t%86400*1000)).toUTCString().replace(/.*(\d{2}):(\d{2}):(\d{2}).*/, "$1h $2m $3s");
}

function getMonthValue(month)
{
   var monthValue=1;

   if(month=="Jan")
   {
      monthValue = 1;

   }else if(month=="Feb")
   {
      monthValue = 2;

   }else if(month=="Mar")
   {
      monthValue = 3;
      
   }else if(month=="Apr")
   {
      monthValue = 4;
      
   }else if(month=="May")
   {
      monthValue = 5;
      
   }else if(month=="Jun")
   {
      monthValue = 6;
      
   }else if(month=="Jul")
   {
      monthValue = 7;
      
   }else if(month=="Aug")
   {
      monthValue = 8;
      
   }else if(month=="Sep")
   {
      monthValue = 9;
      
   }else if(month=="Oct")
   {
      monthValue = 10;
      
   }else if(month=="Nov")
   {
      monthValue = 11;
      
   }else if(month=="Dec")
   {
      monthValue = 12;
      
   }

   return monthValue;
}

%>



<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">

<link rel="stylesheet" type="text/css" href="../../resources/css/bootstrap.css" />
<script src="../../resources/js/vendor/jquery-1.10.1.min.js"></script>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
      google.load("visualization", "1", {packages:["corechart"]});
      google.setOnLoadCallback(drawChart);
      function drawChart() {
               

        var data = google.visualization.arrayToDataTable([
         <% getStates(getHumanTaskData(taskName)); %>
        ]);

        var options = {
          title: 'Instances by Task Status',
          is3D: true,
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart_3d'));
        chart.draw(data, options);
      }
    </script>
</head>
<body>  

                   <div class="row">
                        <div class="col-lg-12">
                            <div class="navbar timelySwitch pull-left" style="overflow: hidden;">
                                      <div id="hprocess-dd">
                                        <% getStatButton(statButton);  %>
                                      </div>
                                  </div>
                        </div>
                    </div>

        <h3 style="background-color:lightblue;">Task Related Information</h3>
                                       
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="well topFilteringPanel"><span class="span3">Select Task Name :
                                      <select id="taskName-dd" name="basic-combo" onChange="window.location.href=this.value">
                                           <% getTaskNames(packageResults); %>
                                      </select></span>
                                      
                               
                               <% getClearButton("All"); %>
                            </div>
                        </div>
                    </div>


        <% 
              if(statButton=="Task")
              {
                if(taskName=="All")
                {
                    getHumanTaskList(packageResults);

                }else
                {
                    var humanTaskResults = getHumanTaskData(taskName);
                    getPieChart(humanTaskResults);
                    getInstances(humanTaskResults);
                }

              }else
              {

              }
                
                
        %>

   
                 

          <% 
                // if(packageName!="All")
                // {
                //   if(instanceValue=="All")
                //   {
                //     getInstances(getPackageData(packageName));
                //   }
                //   else
                //   {
                //     getInstData(instanceValue);
                //   }
                    
                // }                
        %>
     
    



<div id="errorInfo"></div>


<style type="text/css">
body{
font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
background-color: white;
}
#bar-chart-simple{
  width:94%;
}
</style>
<script src="../../resources/js/vendor/bootstrap.min.js"></script>


</body>
</html>