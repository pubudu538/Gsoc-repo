<%

var statButton = request.getParameter('stat');
var instanceValue = request.getParameter('inst');
var taskName = request.getParameter('task');
var userName = request.getParameter('user');
var search = request.getParameter('search');
var page = request.getParameter('page');
var pageSize = 2;
var pageCount = 0;
var tenantId = request.getParameter('tenant');

var log = new Log();
var humanTaskTableUptoDate = "humanTaskUptoDate";
var humanTaskInfoTable = "humanTaskInfoDetails";
var urlString= "human_info.jag?stat="+statButton+"&user="+userName+"&task="+taskName+"&inst=All&tenant="+tenantId+"&page=";

if(page==""){
    page = 1;
}
else{
    page=parseInt(page);
}

log.info("^^^^^^^^^^^^^^^^^^^ --- "+tenantId);






var selectHumanTaskQuery = "Select distinct taskName from "+humanTaskInfoTable  //+" order by taskName";

if(tenantId!="All")
{
  selectHumanTaskQuery = selectHumanTaskQuery + " where tenantId="+tenantId + " and taskStatus='RESERVED' order by taskName";
}
else
{
  selectHumanTaskQuery = selectHumanTaskQuery +  " order by taskName";
}

var packageResults = QueryResults(selectHumanTaskQuery);



var selectUserNames = "Select distinct taskOwner from "+humanTaskTableUptoDate+" order by taskOwner";
var userNameResults = QueryResults(selectUserNames);

// get data from the embedded h2 database in BAM
function QueryResults(q){
        
        var result;
        try{
            var db = new Database("WSO2BAM_DATASOURCE");
            result = db.query(q);
        }
        catch(e){
            result=null;
            //print(e);
        }
        finally{
            db.close();
        }
        return result;
}
   
// displaying human task with task name and # of instances
function getHumanTaskList(results)
{
    
    print("<table class='table table-bordere' style='width:96%; margin-left:20px; empty-cells:hide; border-collapse: collapse'>");        
    print("<thead><tr><th>Task Name</th><th class='text-center'>Total Instances</th></tr></thead><tbody>")

    for (var k in results){

        var selectTaskCountQuery = "Select Count(taskId) as count from "+humanTaskInfoTable+" where taskName='"+results[k]["TASKNAME"]+"' and taskStatus='RESERVED'";

        if(tenantId!="All")
        {
          selectTaskCountQuery = selectTaskCountQuery + " and tenantId="+tenantId;
        }

        var countResults = QueryResults(selectTaskCountQuery);      
        results[k]["COUNT"] = countResults[0]["COUNT"];   
    }

    if(results==null)
    {
         var dataNotAvailable = "<font color='red'>No data Found!</font>";

         print("<tr>");
         print("<td></td>");
         print("<td style='line-height:250px'>"+dataNotAvailable+"</td>");                                                                    
         print("</tr>");
    }
    else
    {
        if(results.length == 0)
        {
        var dataNotAvailable = "<font color='red'>No data Found!</font>";

         print("<tr>");
         print("<td></td>");
         print("<td style='line-height:250px'>"+dataNotAvailable+"</td>");                                                                    
         print("</tr>");
        }
        else
        {
          for (var k in results){
         print("<tr>");
         print("<td>"+results[k]["TASKNAME"]+"</td>");
         print("<td class='text-center'>"+results[k]["COUNT"]+"</td>");                                                                   
         print("</tr>");
           }
        }     
    }
            
    print("</tbody></table>");
}

// setting task names in drop down menu
function getTaskNames(results)
{
    if(taskName=="All")
    {
      print("<option value='human_info.jag?stat=Taskl&task=All&inst=All&tenant="+tenantId+"' selected>All</option>");

     for (var k in results){
        print("<option value='human_info.jag?stat=Task&task="+results[k]["TASKNAME"]+"&inst=All&page=1&tenant="+tenantId+"'>"+results[k]["TASKNAME"]+"</option>");
     }

    }
    else
    {
       print("<option value='human_info.jag?stat=Task&task=All&inst=All&tenant="+tenantId+"'>All</option>");

      for (var k in results)
      {
        var tName = results[k]["TASKNAME"];

        if(taskName==tName)
        {
           print("<option value='human_info.jag?stat=Task&task="+tName+"&inst=All&page=1&tenant="+tenantId+"' selected>"+tName+"</option>");
        }
        else
        {
           print("<option value='human_info.jag?stat=Task&task="+tName+"&inst=All&page=1&tenant="+tenantId+"'>"+tName+"</option>");
        }
      }
    }   

}
    
// setting data for pie chart
function getPieChart(instances)
{

  var totalInst = 0;

  if(instances != null)
  {
      totalInst = instances.length;
  }

  var totalInstances = "<b>"+totalInst+"</b>";
  var avgRespondTime = "<b>"+calculateAvgRespondTime(getHumanTaskData(taskName,1))+"</b>";
  var avgCompletedTime = "<b>"+calculateAvgCompletionTime(instances)+"</b>"
 
  print("<h5 style='margin-left:20px'>Total Instances : "+totalInstances+"</h5>");
  print("<h5 style='margin-left:20px'>Average Response Time : "+avgRespondTime+"</h5>");
  print("<h5 style='margin-left:20px'>Average Completion Time : "+avgCompletedTime+"</h5>");
  print("<div id='piechart_3d' style='width: 1000px; height: 600px;'></div>");
  print("<h3 style='background-color:lightblue;'>Instances Related Information</h3>");
}

// calculate average respond time for instances
function calculateAvgRespondTime(instances)
{
  var respondTime = "N/A";
  var responseTime = 0;
  var instCount = 0;

    for (var k in instances){

        if(instances[k]["MDATE"]!=null)
        {
          var timeDidd = (instances[k]["MDATE"]/1000) - convertToUTC(instances[k]["TASKCREATEDTIME"]);
          responseTime += timeDidd;
          instCount++;        
        }        
    }  

    if(responseTime!=0)
    {
      respondTime = getDateTime(responseTime/instCount);
    }


  return respondTime;
}

// calculate average completion of a instance
function calculateAvgCompletionTime(instances)
{
    var instCount = 0;
    var completedTime = "N/A";
    var responseTime =0;

    for (var k in instances){

        if(instances[k]["TASKSTATUS"]=="COMPLETED")
        {
          var timeDidd = (instances[k]["MODIFIEDDATE"]/1000) - convertToUTC(instances[k]["TASKCREATEDTIME"]);
          responseTime += timeDidd;
          instCount++;      
        }        
    }

     if(responseTime!=0)
    {
      completedTime = getDateTime(responseTime/instCount);
    }

    return completedTime;
}

// setting instance count for pie chart
function getStates(instances)
{
 var reserved=0;
 var inprogress=0;
 var completed=0;
 var ready=0;
 var suspended=0;
 var failed = 0;

   for(var k in instances)
  {
  if(instances[k]["TASKSTATUS"]=="RESERVED")
  {
    reserved++;
  }
  else if(instances[k]["TASKSTATUS"]=="IN_PROGRESS")
  {
    inprogress++;

  }else if(instances[k]["TASKSTATUS"]=="COMPLETED")
  {
    completed++;

  }else if(instances[k]["TASKSTATUS"]=="READY")
  {
    ready++;

  }else if(instances[k]["TASKSTATUS"]=="SUSPENDED")
  {
    suspended++;
  }
  else if(instances[k]["TASKSTATUS"]=="FAILED")
  {
    failed++;
   }
  }

 print("['Status', 'Instance Count'],"+'\n');
 print("['Reserved - "+reserved+"',     "+reserved+"],"+'\n');
 print("['Failed - "+failed+"',     "+failed+"],"+'\n');
 print("['Suspended - "+suspended+"',     "+suspended+"],"+'\n');
 print("['Completed - "+completed+"',     "+completed+"],"+'\n');
 print("['In_Progress - "+inprogress+"',     "+inprogress+"],"+'\n');
 print("['Ready - "+ready+"',  "+ready+"]");

}

// displaying task id,task subject,status,created time,completion time and the owner
function getInstances(results)
{

    if(results.length == 0)
    {

      print("<h5 align='center'; style='color:#FF0000'>No data found for Instance Id - "+instanceValue+"</h5>");
     
    }
    else
    {
       print("<table class='table table-bordere' style='width:96%; margin-left:20px; empty-cells:hide; border-collapse: collapse'>");        
       print("<thead><tr><th>Task Id</th><th class='text-center'>Subject</th><th class='text-center'>Status</th><th class='text-center'>Created Date</th><th class='text-center'>Task Completion Time</th><th class='text-center'>Participants</th></tr></thead><tbody>")


        for (var k in results){

         var taskStatus = results[k]["TASKSTATUS"];
         var stateData="<font color='"+getFontColour(taskStatus)+"'>"+taskStatus+"</font>";
         var completionTime = "N/A";
         var taskCreatedTime = results[k]["TASKCREATEDTIME"];
         var tOwner = results[k]["TASKOWNER"];

         if(taskStatus == "COMPLETED"){
            completionTime = getTimeDiff(taskCreatedTime,results[k]["MODIFIEDDATE"]);
         }

         if(tOwner==null)
         {
           tOwner="N/A";
         }

         print("<tr>");
         print("<td>"+results[k]["TASKID"]+"</td>");
         print("<td>"+results[k]["TASKSUBJECT"]+"</td>");
         print("<td>"+stateData+"</td>");
         print("<td align='center'>"+taskCreatedTime+"</td>");
         print("<td align='center'>"+completionTime+"</td>");
         print("<td align='center'>"+tOwner+"</td>");                                                                     
         print("</tr>");
        }

         print("</tbody></table>");
    }


    // print("</tbody></table>");
}

// return font colour for task status
function getFontColour(state)
{

  var colour="black";

  if(state=="RESERVED")
  {
    colour="blue";
  }
  else if(state=="COMPLETED")
  {
    colour="green";
  }
  else if(state=="FAILED")
  {
    colour="red";
  }
  else if(state=="SUSPENDED")
  {
    colour="orange";
  }
  else if(state=="IN_PROGRESS")
  {
    colour="purple";
  }
  else if(state=="READY")
  {
    colour="black";
  }

  return colour;

}

// setting up clear button in the drop down according to the stat button
function getClearButton(type,num)
{
  if(num==0)
  {
    if(type=="Task")
    {
     print("<button onClick=\"window.location.href='human_info.jag?stat=Task&task=All&tenant="+tenantId+"'\" id='clearSelectionBtn1' class='btn btn-primary btn-small pull-right filter-btn'>Clear</button>");
    }
   else
    {
     print("<button onClick=\"window.location.href='human_info.jag?stat=User&user=All&tenant="+tenantId+"'\" id='clearSelectionBtn1' class='btn btn-primary btn-small pull-right filter-btn'>Clear</button>");
   }

  }
  else
  {
    print("<button onClick=\"window.location.href='human_info.jag?stat=Task&task="+taskName+"&inst=All&page=1&tenant="+tenantId+"'\" id='clearSelectionBtn1' class='btn btn-primary btn-small pull-right filter-btn'>Clear</button>");
    
  }  
 
}

// setting up the stat button according to the input Task and User
function getStatButton(stat)
{

  if(stat == "Task")
  {
      print("<button onClick=\"window.location.href='human_info.jag?stat=Task&task=All&tenant="+tenantId+"'\"  class='btn btn-primary'>Task Related Stats</button><button onClick=\"window.location.href='human_info.jag?stat=User&user=All&tenant="+tenantId+"'\" class='btn'>Per User Stats</button>");
  }
  else
  {
       print("<button onClick=\"window.location.href='human_info.jag?stat=Task&task=All&tenant="+tenantId+"'\"  class='btn'>Task Related Stats</button><button onClick=\"window.location.href='human_info.jag?stat=User&user=All&tenant="+tenantId+"'\" class='btn btn-primary'>Per User Stats</button>");
  }

}

// getting instance data according to the type 0 and 1
function getHumanTaskData(taskN,type)
{
   var selectDistinctTasksQuery = "Select taskId,taskSubject,taskOwner,taskStatus,modifiedDate,taskCreatedTime from "+humanTaskTableUptoDate+" where taskName='"+taskN+"' order by taskCreatedTime asc";
   var distinctTasks = null;
 
  // Use for current status calculation
   if(type==0)
   {

    var selectTenantTasksQuery = "Select distinct taskId from "+humanTaskInfoTable +" where taskName='"+taskN+"' and taskStatus='RESERVED'";


    if(tenantId!="All")
    {
      selectTenantTasksQuery = selectTenantTasksQuery + " and tenantId='"+tenantId+"'";
    }
          
    var distinctTenantTasks = QueryResults(selectTenantTasksQuery);

    // log.info("111111111111111111111111111");
    //  log.info(selectTenantTasksQuery);
    // log.info(distinctTenantTasks);    

    for (var k in distinctTenantTasks)
    {      
       
       var selectInfoQuery = "Select taskOwner,taskSubject,taskStatus,modifiedDate,taskCreatedTime from "+humanTaskTableUptoDate+" where taskId='"+distinctTenantTasks[k]["TASKID"]+"' order by taskCreatedTime asc";
       var taskRespond = QueryResults(selectInfoQuery);
      
      log.info("11111111122222222222222222111111111111111111");
     log.info(selectInfoQuery);
    log.info(taskRespond);

      if(taskRespond != null || taskRespond.length !=0)
      {
        distinctTenantTasks[k]["TASKOWNER"]=taskRespond[0]["TASKOWNER"];
        distinctTenantTasks[k]["TASKSTATUS"]=taskRespond[0]["TASKSTATUS"];
        distinctTenantTasks[k]["MODIFIEDDATE"]=taskRespond[0]["MODIFIEDDATE"];
        distinctTenantTasks[k]["TASKSUBJECT"]=taskRespond[0]["TASKSUBJECT"];
        distinctTenantTasks[k]["TASKCREATEDTIME"]=taskRespond[0]["TASKCREATEDTIME"];

      }
      

    }


    distinctTasks = distinctTenantTasks;

   }
   else if(type == 1)
   {

     var selectTenantTasksQuery = "Select distinct taskId from "+humanTaskInfoTable +" where taskName='"+taskN+"' and taskStatus='RESERVED'";


    if(tenantId!="All")
    {
      selectTenantTasksQuery = selectTenantTasksQuery + " and tenantId='"+tenantId+"'";
    }

      distinctTasks = QueryResults(selectTenantTasksQuery);

      //For Average Response Time calculation
    for (var k in distinctTasks)
    {      
       
       var selectFromDetailsQuery = "Select taskId,taskStatus,modifiedDate from "+humanTaskInfoTable+" where taskName='"+taskN+"' and taskId='"+distinctTasks[k]["TASKID"]+"' order by modifiedDate asc LIMIT 1 OFFSET 1";
       var respondTimeTasks = QueryResults(selectFromDetailsQuery);
    

      if(respondTimeTasks == null || respondTimeTasks.length ==0)
      {
        distinctTasks[k]["MDATE"]=null;
      }
      else
      {
        distinctTasks[k]["MDATE"] = respondTimeTasks[0]["MODIFIEDDATE"];
      }

    }
   
    }
    else if(type ==2)
    {

      var start = pageSize*(page-1);

      selectDistinctTasksQuery = selectDistinctTasksQuery + " Limit "+start+","+pageSize;
      distinctTasks = QueryResults(selectDistinctTasksQuery);

      for (var k2 in distinctTasks)
      {
       
         if(distinctTasks[k2]["TASKOWNER"]==null)
         {
           var selectQuery = "Select taskOwner from "+humanTaskInfoTable+" where taskName='"+taskN+"' and taskId='"+distinctTasks[k2]["TASKID"]+"' order by modifiedDate asc Limit 1";
           var responses = QueryResults(selectQuery);
      
           distinctTasks[k2]["TASKOWNER"] = responses[0]["TASKOWNER"];
         }
      }
     

    }

    return distinctTasks;

}

// return the time difference accoding to the format days, hours, mintues and seconds
function getTimeDiff(startT,endT)
{
    return getDateTime((endT/1000)-convertToUTC(startT));
}

// convert Normal time format in to Utc time
function convertToUTC(time)
{  
    var timeValues = time.split(" ");
    var month = getMonthValue(timeValues[1])-1;
    var year = timeValues[5];
    var date = timeValues[2];

    var hourValues = timeValues[3].split(":");

    var setTime = new Date(year,month,date,hourValues[0],hourValues[1],hourValues[2]);
    var utcTime = setTime.getTime()/1000;

    return utcTime;
}

// convert UTC time to Days, Hours, Minutes and Seconds
function getDateTime(t){

  return parseInt(t/86400)+'d '+(new Date(t%86400*1000)).toUTCString().replace(/.*(\d{2}):(\d{2}):(\d{2}).*/, "$1h $2m $3s");
}

// get month value which has month name in three words
function getMonthValue(month)
{
   var monthValue=1;

   if(month=="Jan")
   {
      monthValue = 1;

   }else if(month=="Feb")
   {
      monthValue = 2;

   }else if(month=="Mar")
   {
      monthValue = 3;
      
   }else if(month=="Apr")
   {
      monthValue = 4;
      
   }else if(month=="May")
   {
      monthValue = 5;
      
   }else if(month=="Jun")
   {
      monthValue = 6;
      
   }else if(month=="Jul")
   {
      monthValue = 7;
      
   }else if(month=="Aug")
   {
      monthValue = 8;
      
   }else if(month=="Sep")
   {
      monthValue = 9;
      
   }else if(month=="Oct")
   {
      monthValue = 10;
      
   }else if(month=="Nov")
   {
      monthValue = 11;
      
   }else if(month=="Dec")
   {
      monthValue = 12;
      
   }

   return monthValue;
}

// change drop down key word according to the stat button
function changeTaskUser(type)
{

  if(type == "Task")
  {
    print("<span class='input-group-btn'>Select Task Name :<select id='taskName-dd' name='basic-combo' onChange=\"window.location.href=this.value\">");
    getTaskNames(packageResults);
    print("</select></span>");
  }
  else
  {
    print("<span class='input-group-btn'>Select User :<select id='taskId-dd' name='basic-combo' onChange=\"window.location.href=this.value\">");
    getUserNames(userNameResults);
    print("</select></span>");

    var className = "input-group-btn";
    if(userName == "All")
    {
      className = "hidden";
    }

    print("&nbsp;&nbsp;<span class='"+className+"'>Select Task Name :<select id='taskName-dd' name='basic-combo' onChange=\"window.location.href=this.value\">");
    getTaskNamesForSelector(getTaskNamesforUserData());
    print("</select></span>&nbsp;&nbsp;");

    var instVal = instanceValue;
    if(instVal=="All" || instVal==null)
    {
    instVal="";
    }

    print("<span class='"+className+"'><input type='text' class='form-control' style='width:150px' onkeydown='redirectInEnter(event)' id='textboxinput' placeholder='"+instVal+"'></span>");

    print("<span class='"+className+"'><button class='btn btn-primary' onclick='redirect()' id='search_button' type='button'>Search Task</button></span>&nbsp;&nbsp;");


  }

}

function getTaskNamesforUserData()
{
  var selectHumanTaskQuery = "Select distinct taskName from "+humanTaskInfoTable+" order by taskName";
  var taskNameList = QueryResults(selectHumanTaskQuery);

  return taskNameList;

}

// set username for the drop down menu
function getUserNames(results)
{

    if(userName=="All")
    {
      print("<option value='human_info.jag?stat=User&user=All&task=All&tenant="+tenantId+"' selected>All</option>");

     for (var k in results){

      var owner = results[k]["TASKOWNER"];

      if(owner!=null)
      {
        print("<option value='human_info.jag?stat=User&user="+owner+"&task=All&page=1&tenant="+tenantId+"'>"+owner+"</option>");
      }
        
     }

    }
    else
    {
       print("<option value='human_info.jag?stat=User&user=All&tenant="+tenantId+"'>All</option>");

      for (var k in results)
      {
        var tName = results[k]["TASKOWNER"];

        if(tName!=null)
        {
          if(userName==tName)
        {
           print("<option value='human_info.jag?stat=User&user="+tName+"&task=All&page=1&tenant="+tenantId+"' selected>"+tName+"</option>");
        }
        else
        {
           print("<option value='human_info.jag?stat=User&user="+tName+"&task=All&page=1&tenant="+tenantId+"'>"+tName+"</option>");
        }

        }

      }

    }

}

// set task names for drop down menu
function getTaskNamesForSelector(results)
{

    if(taskName=="All")
    {
      print("<option value='human_info.jag?stat=User&user="+userName+"&task=All&tenant="+tenantId+"' selected>All</option>");

     for (var k in results){

      var task = results[k]["TASKNAME"];

      if(task!=null)
      {
        print("<option value='human_info.jag?stat=User&user="+userName+"&task="+task+"&page=1&tenant="+tenantId+"'>"+task+"</option>");
      }
        
     }

    }
    else
    {
       print("<option value='human_info.jag?stat=User&user="+userName+"&task=All&page=1&tenant="+tenantId+"'>All</option>");

      for (var k in results)
      {
        var tName = results[k]["TASKNAME"];

        if(tName!=null)
        {
          if(taskName==tName)
        {
           print("<option value='human_info.jag?stat=User&user="+userName+"&task="+tName+"&page=1&tenant="+tenantId+"' selected>"+tName+"</option>");
        }
        else
        {
           print("<option value='human_info.jag?stat=User&user="+userName+"&task="+tName+"&page=1&tenant="+tenantId+"'>"+tName+"</option>");
        }

        }

      }

    }

}

// change titles according to the stat button value
function changeTitles(type)
{
    if(type=="Task")
    {
      print("<h3 style='background-color:lightblue;'>Task Related Information</h3>");
    }
    else
    {
      print("<h3 style='background-color:lightblue;'>User Related Information</h3>");
    }
}

// get user data for specific user
function getUserData(user)
{

   // var selectDistinctUserTasksQuery = "Select * from "+humanTaskInfoTable+" where taskOwner='"+user+"' and taskStatus='RESERVED' order by taskCreatedTime";
   // var distinctTasks = QueryResults(selectDistinctUserTasksQuery);

   // var selectNonReservedUserTasksQuery = "Select taskId,taskStatus,modifiedDate,taskOwner from "+humanTaskTableUptoDate+" where taskOwner='"+user+"' and taskStatus!='RESERVED' order by modifiedDate";
   // var nonReservedTasks = QueryResults(selectNonReservedUserTasksQuery);


      var selectUserTasksQuery = "Select * from "+humanTaskTableUptoDate+" where taskOwner='"+user+"' order by taskCreatedTime";
      var dTasks = QueryResults(selectUserTasksQuery);

      var selectNonUserTasksQuery = "Select taskId from "+humanTaskTableUptoDate+" where taskOwner IS NULL";
      var nonUsersTasks = QueryResults(selectNonUserTasksQuery);


      for (var k in nonUsersTasks)
      {

        var selectFromInfoTable = "Select taskId from "+humanTaskInfoTable+" where taskId='"+nonUsersTasks[k]["TASKID"]+"' and taskOwner='"+user+"' and taskStatus='RESERVED' Limit 1";
        var fromInfoData = QueryResults(selectFromInfoTable);

        if(fromInfoData!=null && fromInfoData.length != 0)
        {
            var selectUTQuery = "Select * from "+humanTaskTableUptoDate+" where taskId='"+nonUsersTasks[k]["TASKID"]+"'";
            var UTData = QueryResults(selectUTQuery);
            dTasks.push(UTData[0]);
        }    


      }   


   return dTasks;
}

// get data to calculate average respond time
function getDataForAverageRespond(results)
{

    for (var k in results)
    {      
       
       var selectFromDetailsQuery = "Select modifiedDate from "+humanTaskInfoTable+" where taskName='"+results[k]["TASKNAME"]+"' and taskId='"+results[k]["TASKID"]+"' order by modifiedDate asc LIMIT 1 OFFSET 1";
       var respondTimeTasks = QueryResults(selectFromDetailsQuery);
        
       if(respondTimeTasks == null || respondTimeTasks.length ==0)
      {
        results[k]["MDATE"]=null;
      }
       else
      {
        results[k]["MDATE"] = respondTimeTasks[0]["MODIFIEDDATE"];
      }

    }

    return results;
}

// displaying user related data such as total task,completed tasks,inprogress tasks,etc.
function setUsersData(userList)
{

  print("<table class='table table-bordere' style='width:96%; margin-left:20px; empty-cells:hide; border-collapse: collapse'>");
  print("<thead><tr><th>User</th><th class='text-center'>Total Tasks</th><th class='text-center'>Completed Tasks</th><th class='text-center'>In_Progress Tasks</th><th class='text-center'>Average Response Time</th></tr></thead><tbody>")

    if(userList==null)
    {
        var dataNotAvailable = "<font color='red'>No data Found!</font>";

         print("<tr>");
         print("<td></td>");
         print("<td></td>");
         print("<td></td>");
         print("<td style='line-height:250px'>"+dataNotAvailable+"</td>");
         print("<td></td>");                                                                    
         print("</tr>");
    }
    else
    {

      if(userList.length == 0)
       {
        var dataNotAvailable = "<font color='red'>No data Found!</font>";

         print("<tr>");
         print("<td></td>");
         print("<td></td>");
         print("<td style='line-height:250px'>"+dataNotAvailable+"</td>");
         print("<td></td>");
         print("<td></td>");                                                                    
         print("</tr>");
      }
       else
     {
        for (var k in userList){

      var user = userList[k]["TASKOWNER"];

      if(user!=null)
      {
        var userData = getUserData(user);

         print("<tr>");
         print("<td>"+user+"</td>");
         print("<td align='center'>"+userData.length+"</td>");

         var counter = 0;

         for (var k2 in userData){

          if(userData[k2]["TASKSTATUS"]=="COMPLETED")
          {
            counter++;
          }

         }

         var inprogressTasks = userData.length - counter;
         var userAvgData = getDataForAverageRespond(userData);
         var avgValue = calculateAvgRespondTime(userAvgData);

         print("<td align='center'>"+counter+"</td>");  
         print("<td align='center'>"+inprogressTasks+"</td>");  
         print("<td align='center'>"+avgValue+"</td>");
         print("</tr>");

        
      }

        }
    
    }

    }

   
               

    print("</tbody></table>");

}

// query data for drop menu setup
function getAdvancedUserData(user,type)
{
  var taskN = taskName;
  var selectQuery = "Select * from "+humanTaskTableUptoDate+" where taskOwner='"+user+"'";
  
  if(taskN != "All")
  {
    selectQuery = selectQuery + " and taskName='"+taskN+"'";
  }

  selectQuery = selectQuery + " order by taskCreatedTime";

  if(type==0)
  {
      var start = pageSize*(page-1);
      selectQuery = selectQuery + " Limit "+start+","+pageSize;
  }

    var dTasks = QueryResults(selectQuery);

    return dTasks;
}

// displaying user specific tasks
function setUserSpecificData(results)
{
    
    print("<table class='table table-bordere' style='width:96%; margin-left:20px; empty-cells:hide; border-collapse: collapse'>");        
    print("<thead><tr><th>Task Id</th><th class='text-center'>Subject</th><th class='text-center'>Status</th><th class='text-center'>Created Date</th><th class='text-center'>Task Completion Time</th></tr></thead><tbody>")

    if(results.length == 0)
    {
        var dataNotAvailable = "<font color='red'>No data Found!</font>";

         print("<tr>");
         print("<td></td>");
         print("<td></td>");
         print("<td style='line-height:250px'>"+dataNotAvailable+"</td>");
         print("<td></td>");
         print("<td></td>");                                                                     
         print("</tr>");
    }
    else
    {
        for (var k in results){

         var taskStatus = results[k]["TASKSTATUS"];
         var stateData="<font color='"+getFontColour(taskStatus)+"'>"+taskStatus+"</font>";
         var completionTime = "N/A";
         var taskCreatedTime = results[k]["TASKCREATEDTIME"];

         log.info(results);

         if(taskStatus == "COMPLETED"){
            completionTime = getTimeDiff(taskCreatedTime,results[k]["MODIFIEDDATE"]);
         }
         print("<tr>");
         print("<td>"+results[k]["TASKID"]+"</td>");
         print("<td>"+results[k]["TASKSUBJECT"]+"</td>");
         print("<td>"+stateData+"</td>");
         print("<td align='center'>"+taskCreatedTime+"</td>");
         print("<td align='center'>"+completionTime+"</td>");                                                                    
         print("</tr>");
        }
    }           
    print("</tbody></table>");


}

function hideInstances(statB,taskN)
{
  if(statB=="Task")
  {      
     if(taskN=="All")
     {
      print("<div class='hidden'>");
     }
     else
     {
      print("<div class='well topFilteringPanel'>"); 
     }
  }
  else
  {
    print("<div class='hidden'>"); 
    
  }

}

function getTextBoxProperties(instVal)
{

  if(instVal=="All")
  {
    instVal="";
  }
  print("<input type='text' class='form-control' onkeydown='redirectInEnter(event)' id='textboxinput' placeholder='"+instVal+"'>");
     
}

function getValues(packN)
{
  print("'"+packN+"';");
}


function searchButtonClick()
{
    print("<button class='btn btn-primary' onClick='redirect()'  id='search_button' type='button'>Search Task</button>");
                      
}

// search for instance 
function searchInstance(instId,taskN)
{

  var selectDistinctTasksQuery = "Select taskId,taskSubject,taskOwner,taskStatus,modifiedDate,taskCreatedTime from "+humanTaskTableUptoDate+" where taskName='"+taskN+"' and taskId='"+instId+"'";
  var distinctTasks = QueryResults(selectDistinctTasksQuery);

   for (var k2 in distinctTasks)
      {
       
         if(distinctTasks[k2]["TASKOWNER"]==null)
         {
           var selectQuery = "Select taskOwner from "+humanTaskInfoTable+" where taskName='"+taskN+"' and taskId='"+distinctTasks[k2]["TASKID"]+"' order by modifiedDate asc Limit 1";
           var responses = QueryResults(selectQuery);
      
           distinctTasks[k2]["TASKOWNER"] = responses[0]["TASKOWNER"];
         }
      }

  return distinctTasks;
}

// get pagination property values
function getPagination()
{

    var paginationValue = "<div class='hidden'>";

    
   if(statButton=="Task" && taskName!="All")
    {
       if(search!="search")
        {
            paginationValue = "<div class='text-center'>";
        }

    }
    else if(statButton=="User" && userName!="All")
    {
        if(search!="search")
        {
            paginationValue = "<div class='text-center'>";
        }
    }


    print(paginationValue);    
    
}

// get total page count
function getPageCount(instances)
{
  var pages=1;

    if(instances != null)
    {
      if(instances.length!=0)
      {
        pages = Math.ceil(instances.length/pageSize);
      }
    }

    return pages;

}

// get search results for search option
function getSearchResults()
{

    var taskN = taskName;
    var user = userName;
    var inst = instanceValue;

    var selectQuery = "Select * from "+humanTaskTableUptoDate+" where taskOwner='"+user+"'";
   

    if(taskN != "All")
    {
    selectQuery = selectQuery + " and taskName='"+taskN+"'";
    }

    selectQuery = selectQuery + " and taskId='"+inst+"'";

    var resultsList = QueryResults(selectQuery);

    return resultsList;

}


%>


<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">

<link rel="stylesheet" type="text/css" href="../../resources/css/bootstrap.css" />
<script src="../../resources/js/vendor/jquery-1.10.1.min.js"></script>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
    function redirectInEnter(event) {

        if (event.keyCode == 13) {
            redirect();
          }
    };
</script>
<script type="text/javascript">
    function redirect() {

        var instValue = document.getElementById("textboxinput").value;
        var packN = <% getValues(taskName); %>
        var statB = <% getValues(statButton); %>
        var userN = <% getValues(userName); %>
        var tenantValue = <% getValues(tenantId); %>

        if(instValue=="")
        {
          instValue="All";
        }

        if(statB=="Task")
        {
            window.location.href = 'human_info.jag?stat=Task&task='+packN+'&inst='+instValue+'&search=search&tenant='+tenantValue+'';
        }
        else
        {
             window.location.href = 'human_info.jag?stat=User&user='+userN+'&task='+packN+'&inst='+instValue+'&search=search&tenant='+tenantId+'';
        }
        
       

    };
</script>
<script type="text/javascript">
      google.load("visualization", "1", {packages:["corechart"]});
      google.setOnLoadCallback(drawChart);
      function drawChart() {
               

        var data = google.visualization.arrayToDataTable([
         <% getStates(getHumanTaskData(taskName,0)); %>
        ]);

        var options = {
          title: 'Instances by Task Status',
          is3D: true,
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart_3d'));
        chart.draw(data, options);
      }
    </script>
</head>
<body>  
                <div class="container" style="max-width:1200px">
                   <div class="row">
                        <div class="col-lg-12" style="padding-left:0px">
                            <div class="navbar timelySwitch pull-left" style="overflow: hidden;">
                                      <div id="hprocess-dd">
                                        <% getStatButton(statButton);  %>
                                      </div>
                                  </div>
                        </div>
                    </div>
                </div>

                    <% changeTitles(statButton); %>
                            
                <div class="container" style="max-width:1200px">           
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="well topFilteringPanel">
                                <div class="row">
                                 <div class="input-group" style="padding-left:20px;padding-right:20px"> 
                            <% changeTaskUser(statButton); %>
                                      
                              <span class="input-group-btn"> 
                               <% getClearButton(statButton,0); %>
                               </span>  
                            </div>
                        </div>
                        </div>
                        </div>
                    </div>
                </div>


        <% 
              if(statButton=="Task")
              {
                if(taskName=="All")
                {
                    getHumanTaskList(packageResults);

                }else
                {
                    var humanTaskResults = getHumanTaskData(taskName,0);
                    getPieChart(humanTaskResults);
                   // getInstances(humanTaskResults);
                }

              }else
              {
                  if(userName == "All")
                  {
                    setUsersData(userNameResults);
                  }
                  else
                  {
                    
                    if(search=="search")
                    {

                      var resultValues = getSearchResults();

                      if(resultValues.length == 0)
                      {
                        print("<h5 align='center'; style='color:#FF0000'>No data found for Instance Id - "+instanceValue+"</h5>");
                      }
                      else
                      {
                        setUserSpecificData(resultValues);
                      }                        
                        
                    }
                    else
                    {
                      var UData = getAdvancedUserData(userName,0);
                      pageCount = getPageCount(getAdvancedUserData(userName,1));
                      setUserSpecificData(UData);
                    }
                       
                   
                   
                  }

              }                
                
        %>

           <div class="container" style="max-width:1200px">            
                                <% hideInstances(statButton,taskName); %>
                                    <div class="row">                  
                                 <div class="input-group" style="padding-left:20px;padding-right:20px">
                                        <% getTextBoxProperties(instanceValue); %>
                                          <span class="input-group-btn">
                                              <% searchButtonClick(); %>  
                                        </span>
                                         <span class="input-group-btn" style="width:650px">                                      
                                        </span>
                                        <span class="input-group-btn">
                                          <% getClearButton(statButton,1); %>  
                                        </span>
                                    </div>                                                                                                               
                         </div>
                     </div>
                </div>

              <%

              if(statButton=="Task" && taskName!="All")
              {
                if(search=="search")
                {                    
                    getInstances(searchInstance(instanceValue,taskName));
                }
                else
                {
                  pageCount = getPageCount(humanTaskResults);
                  getInstances(getHumanTaskData(taskName,2));
                }
              }

              %>

   <% getPagination(); %>
    <ul class="pagination">
        <li id="p-prev" <%if(page==1){%>class="disabled"<%}%> ><a <%if(page!=1){%>href="<%= urlString+(page-1) %>"<%}%> >&laquo;</a></li>

        <% if(pageCount>1){%>
          <% if((page-3)>0){%> <li id="p-1"> <a href="<%= urlString+(1)%>">1</a></li><%}%>
          <% if((page-3)>0){%> <li class="disabled" id="p-1"> <a href="#">...</a></li><%}%>
          <% if((page-2)>0){%> <li id="p-1"> <a href="<%= urlString+(page-2) %>"><%='' +(page-2)%></a></li><%}%>
          <% if((page-1)>0){%> <li id="p-1"> <a href="<%= urlString+(page-1) %>"><%='' +(page-1)%></a></li><%}%>
        <%}%>

        <li id="p-1" class="active"><a href="#"><%='' + page%></a></li>

        <% if(pageCount>1){%>
          <% if((page+1)<=pageCount){%> <li id="p-1"> <a href="<%= urlString+(page+1) %>"><%='' +(page+1)%></a></li><%}%>
          <% if((page+2)<=pageCount){%> <li id="p-1"> <a href="<%= urlString+(page+2) %>"><%='' +(page+2)%></a></li><%}%>
          <% if((page+3)<pageCount){%> <li class="disabled" id="p-1"> <a href="#">...</a></li><%}%>
          <% if((page+3)<=pageCount){%> <li id="p-1"> <a href="<%= urlString+pageCount%>"><%='' +pageCount%></a></li><%}%>
        <%}%>

        <li id="p-next" <%if(page>=pageCount){%>class="disabled"<%}%> ><a <%if(page<pageCount){%>href="<%= urlString+(page+1) %>"<%}%>>&raquo;</a></li>
    </ul>
</div>


       



 
<div id="errorInfo"></div>


<style type="text/css">
body{
font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
background-color: white;
}
#bar-chart-simple{
  width:94%;
}
</style>
<script src="../../resources/js/vendor/bootstrap.min.js"></script>


</body>
</html>
